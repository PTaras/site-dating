[{"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\index.js":"1","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\serviceWorker.js":"2","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\App.js":"3","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\components\\nav-bar.js":"4","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Contacs.js":"5","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Info.js":"6","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Create.js":"7","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Posts.js":"8","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Form.js":"9","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\postActions.js":"10"},{"size":314,"mtime":1608005020201,"results":"11","hashOfConfig":"12"},{"size":5227,"mtime":1608656714336,"results":"13","hashOfConfig":"12"},{"size":239,"mtime":1608005020193,"results":"14","hashOfConfig":"12"},{"size":1654,"mtime":1608835656415,"results":"15","hashOfConfig":"12"},{"size":442,"mtime":1608005020203,"results":"16","hashOfConfig":"12"},{"size":17709,"mtime":1610034418669,"results":"17","hashOfConfig":"12"},{"size":805,"mtime":1608005020203,"results":"18","hashOfConfig":"12"},{"size":1090,"mtime":1608005020205,"results":"19","hashOfConfig":"12"},{"size":13536,"mtime":1608005020204,"results":"20","hashOfConfig":"12"},{"size":395,"mtime":1610034355620,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18zfqy0",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\index.js",[],["44","45"],"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\serviceWorker.js",[],"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\App.js",[],"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\components\\nav-bar.js",[],"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Contacs.js",[],"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Info.js",["46"],"import React, { Component } from 'react';\r\nimport { Container, Row, Col, ListGroup, Card, Nav, DropdownButton, Dropdown, Pagination} from 'react-bootstrap';\r\n\r\nimport Posts from './Posts';\r\n\r\nimport '../../node_modules/nouislider/distribute/nouislider.min.css';\r\nimport '../../node_modules/nouislider/src/nouislider.tooltips.less';\r\nimport '../../node_modules/nouislider/src/nouislider.pips.less';\r\nimport style from '../assets/style/style.css';\r\n\r\nexport default class Info extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            posts: [],\r\n            postFilter: \"\",\r\n            filteredPosts: [],\r\n            filteredGender: [],\r\n            filteredCity: [],\r\n            allCities: [], \r\n            who_is_looking: [], \r\n            city: \"Все города\",\r\n            looking: \"Показать все\",\r\n            age_from: '' || 16,\r\n            age_to: '' || 60, \r\n            countPaging: '',\r\n            currentPage: ''\r\n        };\r\n        this.handleChangeCity = this.handleChangeCity.bind(this);\r\n        this.handleChangeLooking = this.handleChangeLooking.bind(this);\r\n        this.handleChangeAgeFrom = this.handleChangeAgeFrom.bind(this);\r\n        this.handleChangeAgeTo = this.handleChangeAgeTo.bind(this);\r\n        this.handleClickPaging = this.handleClickPaging.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const data = {\r\n            \"filter_\": {\r\n              \"city\": \"Все города\",\r\n              \"who_is_looking_for_whom\": \"Показать все\",\r\n              \"desired_age_from\": 16,\r\n              \"desired_age_to\": 60\r\n            },\r\n            \"page\": {\r\n              \"page\": 1\r\n            }\r\n          };\r\n        fetch('https://meetyoursweet.com.ua/posts/', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Accept': \"*/*\",\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        posts: result.posts, \r\n                        filteredPosts: result.posts,\r\n                        filteredGender: result.posts,\r\n                        filteredCity: result.posts,\r\n                        allCities: result.aviable_items.cities,\r\n                        who_is_looking: result.aviable_items.whoes_is_looking_whoms, \r\n                        age_from: result.filter.desired_age_from,\r\n                        age_to: result.filter.desired_age_to,\r\n                        countPaging: result.aviable_pagination_range,\r\n                        currentPage: result.current_page\r\n                    }, );\r\n                },\r\n\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    };\r\n\r\n    handleChangeCity(e) {\r\n        e.preventDefault();\r\n        const data = {\r\n            \"filter_\": {\r\n              \"city\": e.target.value,\r\n              \"who_is_looking_for_whom\": this.state.looking,\r\n              \"desired_age_from\": 16,\r\n              \"desired_age_to\": 60\r\n            },\r\n            \"page\": {\r\n              \"page\": 1\r\n            }\r\n          };\r\n        fetch('https://meetyoursweet.com.ua/posts/', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Accept': \"*/*\",\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        posts: result.posts, \r\n                        filteredPosts: result.posts,\r\n                        filteredGender: result.posts,\r\n                        filteredCity: result.posts,\r\n                        allCities: result.aviable_items.cities,\r\n                        city: e.target.value\r\n                    }, );\r\n                },\r\n\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n      };\r\n\r\n      handleChangeLooking(e) {\r\n        e.preventDefault();\r\n        const data = {\r\n            \"filter_\": {\r\n              \"city\": this.state.city,\r\n              \"who_is_looking_for_whom\":  e.target.value,\r\n              \"desired_age_from\": this.state.age_from,\r\n              \"desired_age_to\": this.state.age_to \r\n            },\r\n            \"page\": {\r\n              \"page\": 1\r\n            }\r\n          };\r\n        fetch('https://meetyoursweet.com.ua/posts/', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Accept': \"*/*\",\r\n                'Content-Type': 'application/json',\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        posts: result.posts, \r\n                        filteredPosts: result.posts,\r\n                        filteredGender: result.posts,\r\n                        filteredCity: result.posts,\r\n                        who_is_looking: result.aviable_items.whoes_is_looking_whoms,\r\n                        looking: e.target.value\r\n                    }, );\r\n                },\r\n\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n      };\r\n\r\n      handleChangeAgeFrom(e) {\r\n        e.preventDefault();\r\n        if (e.target.value >= 16 || e.target.value <= 60) {\r\n            const data = {\r\n                \"filter_\": {\r\n                  \"city\": this.state.city,\r\n                  \"who_is_looking_for_whom\": this.state.looking,\r\n                  \"desired_age_from\": e.target.value || 16,\r\n                  \"desired_age_to\": this.state.age_to || 60\r\n                },\r\n                \"page\": {\r\n                  \"page\": 1\r\n                }\r\n              };\r\n            fetch('https://meetyoursweet.com.ua/posts/', {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Accept': \"*/*\",\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            posts: result.posts, \r\n                            filteredPosts: result.posts,\r\n                            filteredGender: result.posts,\r\n                            filteredCity: result.posts,\r\n                            who_is_looking: result.aviable_items.whoes_is_looking_whoms,\r\n                            age_from: e.target.value,\r\n                            age_to: result.filter.desired_age_to\r\n                        }, );\r\n                    },\r\n    \r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                        });\r\n                    }\r\n                )\r\n        }\r\n       \r\n      };\r\n\r\n      handleChangeAgeTo(e) {\r\n        e.preventDefault();\r\n        if (e.target.value >= 16 || e.target.value <= 60) {\r\n            const data = {\r\n                \"filter_\": {\r\n                  \"city\": this.state.city,\r\n                  \"who_is_looking_for_whom\": this.state.looking,\r\n                  \"desired_age_from\": this.state.age_from ||16,\r\n                  \"desired_age_to\": e.target.value || 60\r\n                },\r\n                \"page\": {\r\n                  \"page\": 1\r\n                }\r\n              };\r\n            fetch('https://meetyoursweet.com.ua/posts/', {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Accept': \"*/*\",\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            posts: result.posts, \r\n                            filteredPosts: result.posts,\r\n                            filteredGender: result.posts,\r\n                            filteredCity: result.posts,\r\n                            who_is_looking: result.aviable_items.whoes_is_looking_whoms,\r\n                            age_from: result.filter.desired_age_from,\r\n                            age_to: result.filter.desired_age_to,\r\n                            age_to: e.target.value\r\n                        }, );\r\n                    },\r\n    \r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                        });\r\n                    }\r\n                )\r\n        }\r\n        \r\n      };\r\n\r\n      handleClickPaging(e) {\r\n            const data = {\r\n                \"filter_\": {\r\n                  \"city\": this.state.city,\r\n                  \"who_is_looking_for_whom\": this.state.looking,\r\n                  \"desired_age_from\": this.state.age_from || 16,\r\n                  \"desired_age_to\": this.state.age_to || 60\r\n                },\r\n                \"page\": {\r\n                  \"page\": e.target.text\r\n                }\r\n              };\r\n            fetch('https://meetyoursweet.com.ua/posts/', {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Accept': \"*/*\",\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n                .then(res => res.json())\r\n                .then(\r\n                    (result) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            posts: result.posts, \r\n                            filteredPosts: result.posts,\r\n                            filteredGender: result.posts,\r\n                            filteredCity: result.posts,\r\n                            who_is_looking: result.aviable_items.whoes_is_looking_whoms,\r\n                            age_from: result.filter.desired_age_from,\r\n                            age_to: result.filter.desired_age_to,\r\n                            currentPage: result.current_page,\r\n                        }, );\r\n                    },\r\n    \r\n                    (error) => {\r\n                        this.setState({\r\n                            isLoaded: true,\r\n                            error\r\n                        });\r\n                    }\r\n                )\r\n        \r\n        \r\n      };\r\n \r\n    render() {\r\n        const { error, isLoaded, allCities, who_is_looking, countPaging, currentPage  } = this.state;\r\n\r\n        if (error) {\r\n            return ( \r\n                <Card border=\"primary\" className=\"text-center\"  style={{ width: '18rem', display: 'flex', margin: '100px auto' }}>\r\n                    <Card.Header>Error</Card.Header>\r\n                    <Card.Body>\r\n                    <Card.Text>\r\n                        {error.message}\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n                </Card>)\r\n        } else if (!isLoaded) {\r\n            return <p>Loading...</p>\r\n        } else {\r\n            return (\r\n                <Container className=\"themed-container\" fluid={true} style={{style}}> \r\n                    <Row style={{opacity: '70%'}}>\r\n                        <Col md=\"3\" className=\"text-center mt-5\">\r\n                            <h4 className=\"text-center mt-5\" style={{color: 'red', backgroundColor: 'none'}}>Фильтры</h4>\r\n                            <Card>\r\n                            <ListGroup>\r\n                            <Nav.Link eventKey=\"Age\">\r\n                            <h5 className=\"text-center mt-2\">Возраст:</h5>\r\n                                    <ListGroup.Item style ={{height: \"60px\"}}>\r\n                                    <form>\r\n                                        <label>\r\n                                        От:\r\n                                        <input type=\"number\" min=\"16\"\r\n                                                max=\"60\" onChange={this.handleChangeAgeFrom} />\r\n                                        </label>\r\n                                        <label>\r\n                                        Дo:\r\n                                        <input type=\"number\" min=\"16\"\r\n                                                max=\"60\" onChange={this.handleChangeAgeTo} />\r\n                                        </label>\r\n                                    </form>\r\n                                        \r\n                                    </ListGroup.Item>\r\n                                    </Nav.Link>\r\n                                    <ListGroup.Item>\r\n                                        <Nav.Link eventKey=\"Gender\">\r\n                                        <h5>Выбрать пол автора:</h5>\r\n                                        <DropdownButton id=\"dropdown-item-button\" title={this.state.looking}\r\n                                             >\r\n                                            \r\n                                            {(who_is_looking).map((item) => {\r\n                                                return (\r\n                                                    <Dropdown.Item as=\"button\" key={item} \r\n                                                        onClick={this.handleChangeLooking}\r\n                                                        options={item}\r\n                                                        value={item}\r\n                                                    >\r\n                                                    {item}</Dropdown.Item>\r\n                                                )\r\n                                            })}\r\n                                            </DropdownButton>\r\n                                        </Nav.Link>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Nav.Link eventKey=\"City\">\r\n                                            <h5>Город:</h5>\r\n                                           <DropdownButton id=\"dropdown-item-button\" title={this.state.city} \r\n                                             >\r\n                                           {(allCities).map((town) => {\r\n                                                return (\r\n                                                    <Dropdown.Item as=\"button\" key={town} \r\n                                                        onClick={this.handleChangeCity}\r\n                                                        options={town}\r\n                                                        value={town}\r\n                                                    >\r\n                                                    {town}</Dropdown.Item>\r\n                                                )\r\n                                            })}\r\n                                            </DropdownButton>\r\n                                        </Nav.Link>\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col md=\"9\" style={{marginTop: '63px'}}> \r\n                            <Posts \r\n                                   posts={this.state.filteredCity} \r\n                                   onChange={this.filterCity}/>\r\n                                   <Row>\r\n                            <Col md={12}>\r\n                            <Pagination className=\"pagination justify-content-center\">\r\n                                {/* {currentPage === 1 ? <Pagination.First disabled /> : <Pagination.First />}\r\n                                {currentPage === 1 ? <Pagination.Prev disabled/> : <Pagination.Prev />} */}\r\n                                {(Array.from({length:countPaging}, (_, i) => ++i)).map((item) => {\r\n                                    if (countPaging >= 3)  return (\r\n                                        <Pagination.Item key={item} active={item === currentPage} onClick={this.handleClickPaging}> {item}</Pagination.Item >\r\n                                    );\r\n                                    return (\r\n                                        <Pagination.Ellipsis /> \r\n                                    )\r\n                                })}\r\n                                {/* {currentPage === countPaging ? <Pagination.Next disabled /> : <Pagination.Next />}\r\n                                {currentPage === countPaging ? <Pagination.Last disabled/> : <Pagination.Last />} */}\r\n                            </Pagination>\r\n                            </Col>\r\n                        </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Create.js",[],"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Posts.js",[],"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\Form.js",[],"C:\\Users\\38050\\Desktop\\site\\site-dating\\src\\pages\\postActions.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":255,"column":29,"nodeType":"53","messageId":"54","endLine":255,"endColumn":35},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-dupe-keys","Duplicate key 'age_to'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation"]